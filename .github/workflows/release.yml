# Production deployments triggered on Tag
name: Production Release Build

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [13.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/} # version from tag
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install project dependencies
      run: yarn install
    - name: Production Build
      run: |
        yarn build
      env:
        CI: false
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    # Set cache control retention only for static assets folder in build
    - name: Upload to S3
      run: |  
        aws s3 sync $SOURCE_DIR s3://$AWS_S3_BUCKET/$DEST_DIR --exclude "static/*" --cache-control no-cache --no-progress
        aws s3 sync $SOURCE_DIR/static s3://$AWS_S3_BUCKET/$DEST_DIR/static --cache-control max-age=31536000 --no-progress 
      env:
        AWS_S3_BUCKET: "cognitohealth-ui-release"
        SOURCE_DIR: "build"
        DEST_DIR: "ui/release/${{ steps.get_version.outputs.VERSION }}"
